# FlareSolverr Environment Configuration Example
# Copy this file to .env and modify the values as needed

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Listening port for the FlareSolverr server
# Default: 8191
# Note: You don't need to change this if you are running on Docker
PORT=8191

# Listening interface for the FlareSolverr server
# Default: 0.0.0.0 (all interfaces)
# Note: You don't need to change this if you are running on Docker
HOST=0.0.0.0

# =============================================================================
# BROWSER CONFIGURATION
# =============================================================================

# Default timeout for browser operations in milliseconds
# This sets the default maxTimeout when no timeout is specified in API requests
# Default: 60000 (60 seconds)
# Range: 1-300000 (5 minutes max recommended)
BROWSER_TIMEOUT=60000

# Run the web browser in headless mode or visible
# Default: true (headless mode)
# Set to false for debugging purposes only
HEADLESS=true

# Language used in the web browser
# Default: none (uses system default)
# Example: en_GB, es_ES, fr_FR, de_DE
LANG=en_GB

# Timezone used in the logs and the web browser
# Default: UTC
# Example: Europe/London, America/New_York, Asia/Tokyo
TZ=UTC

# Test URL used on startup to verify browser functionality
# Default: https://www.google.com
# Change this if Google is blocked in your country
TEST_URL=https://www.google.com

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Verbosity of the logging
# Options: debug, info, warning, error
# Default: info
# Use debug for troubleshooting (will show more information)
LOG_LEVEL=info

# Log HTML content that passes through the proxy
# Default: false
# Set to true only for debugging purposes (will log sensitive data)
# WARNING: This will log all HTML content including potentially sensitive information
LOG_HTML=false

# =============================================================================
# CAPTCHA SOLVING
# =============================================================================

# Captcha solving method when a captcha is encountered
# Options: none, 2captcha, anticaptcha, deathbycaptcha
# Default: none
# Note: Requires additional configuration and API keys for third-party services
CAPTCHA_SOLVER=none

# 2captcha API key (only if CAPTCHA_SOLVER=2captcha)
# Get your API key from https://2captcha.com/
# 2CAPTCHA_API_KEY=your_api_key_here

# AntiCaptcha API key (only if CAPTCHA_SOLVER=anticaptcha)
# Get your API key from https://anti-captcha.com/
# ANTICAPTCHA_API_KEY=your_api_key_here

# DeathByCaptcha credentials (only if CAPTCHA_SOLVER=deathbycaptcha)
# Get your credentials from https://www.deathbycaptcha.com/
# DEATHBYCAPTCHA_USERNAME=your_username
# DEATHBYCAPTCHA_PASSWORD=your_password

# =============================================================================
# MONITORING AND METRICS
# =============================================================================

# Enable Prometheus metrics exporter
# Default: false
# Set to true to enable metrics collection
PROMETHEUS_ENABLED=false

# Port for Prometheus metrics exporter
# Default: 8192
# Only used if PROMETHEUS_ENABLED=true
PROMETHEUS_PORT=8192

# =============================================================================
# PROXY CONFIGURATION (GLOBAL)
# =============================================================================

# Global proxy configuration (optional)
# These settings apply to all requests if no per-request proxy is specified
# Format: protocol://[username:password@]host:port
# Supported protocols: http, https, socks4, socks5

# HTTP/HTTPS Proxy
# HTTP_PROXY=http://proxy.example.com:8080
# HTTPS_PROXY=http://proxy.example.com:8080

# SOCKS Proxy
# SOCKS_PROXY=socks5://proxy.example.com:1080

# Proxy with authentication
# HTTP_PROXY=http://username:password@proxy.example.com:8080

# No proxy for these hosts (comma-separated)
# NO_PROXY=localhost,127.0.0.1,.local

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# Chrome/Chromium executable path (advanced users only)
# Leave empty to use auto-detection
# CHROME_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Chrome driver executable path (advanced users only)  
# Leave empty to use auto-detection
# CHROMEDRIVER_EXECUTABLE_PATH=/usr/bin/chromedriver

# Additional Chrome arguments (advanced users only)
# Space-separated list of Chrome command line arguments
# CHROME_ARGS=--disable-extensions --disable-plugins

# Maximum number of concurrent browser sessions (advanced users only)
# Default: unlimited (not recommended for production)
# MAX_SESSIONS=10

# Session TTL in minutes (advanced users only)
# Automatically destroy sessions after this time
# Default: 30 minutes
# SESSION_TTL_MINUTES=30

# =============================================================================
# DOCKER-SPECIFIC CONFIGURATION
# =============================================================================

# These variables are typically used only in Docker environments

# User ID for running the container (Docker only)
# PUID=1000

# Group ID for running the container (Docker only)
# PGID=1000

# =============================================================================
# DEVELOPMENT AND DEBUGGING
# =============================================================================

# Enable debug mode (development only)
# Default: false
# WARNING: This may expose sensitive information in logs
DEBUG=false

# Disable SSL certificate verification (development only)
# Default: false
# WARNING: This is insecure and should only be used for testing
DISABLE_SSL_VERIFY=false

# Enable verbose Selenium logging (development only)
# Default: false
SELENIUM_VERBOSE=false

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# API rate limiting (requests per minute per IP)
# Default: 0 (unlimited)
# Set to a positive number to enable rate limiting
# RATE_LIMIT_PER_MINUTE=60

# Allowed origins for CORS (comma-separated)
# Default: * (all origins allowed)
# Set specific origins for security: https://example.com,https://app.example.com
# CORS_ALLOWED_ORIGINS=*

# Maximum request size in bytes
# Default: 1048576 (1MB)
# MAX_REQUEST_SIZE=1048576

# Enable request logging for security auditing
# Default: false
AUDIT_LOGGING=false

# =============================================================================
# NOTES AND EXAMPLES
# =============================================================================

# Example configuration for high-traffic production environment:
# BROWSER_TIMEOUT=30000
# MAX_SESSIONS=20
# RATE_LIMIT_PER_MINUTE=120
# LOG_LEVEL=warning
# PROMETHEUS_ENABLED=true

# Example configuration for development/testing:
# HEADLESS=false
# LOG_LEVEL=debug
# DEBUG=true
# BROWSER_TIMEOUT=120000

# Example configuration for restricted network environment:
# HTTP_PROXY=http://corporate-proxy:8080
# TEST_URL=https://httpbin.org/get
# DISABLE_SSL_VERIFY=true

# For more information, see:
# - README.md
# - https://github.com/FlareSolverr/FlareSolverr 